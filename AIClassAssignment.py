import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
from sklearn.tree import DecisionTreeClassifier

# Read and prepare the dataset
df = pd.concat(map(pd.read_csv, ['benign-log_radio_status_3.csv', 'jamming-log_radio_status_3.csv', 'spoofing-hackrf-log_radio_status_3.csv']), ignore_index=True)
X = df.drop(labels=["attack"], axis=1)
Y = df["attack"].values

# Split dataset into training and test set
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=101)

# Train SVM model and predict
svm_model = SVC()
svm_model.fit(X_train, y_train)
y_pred_svm = svm_model.predict(X_test)
cm_svm = confusion_matrix(y_test, y_pred_svm)

# Train Decision Tree model and predict
dt_model = DecisionTreeClassifier()
dt_model.fit(X_train, y_train)
y_pred_dt = dt_model.predict(X_test)
cm_dt = confusion_matrix(y_test, y_pred_dt)

labels = ['Not attacked', 'attacked']

# Plot Confusion Matrix for SVM
plt.figure(figsize=(7,5))
ax = plt.subplot()
sns.heatmap(cm_svm, cmap="Blues", annot=True, fmt='.1f', ax=ax)
ax.set_xticklabels(labels)
ax.set_yticklabels(labels)
ax.set_xlabel('Predicted labels')
ax.set_ylabel('True labels')
ax.set_title('Confusion Matrix SVM')
plt.show()

# Plot Confusion Matrix for Decision Tree
plt.figure(figsize=(7,5))
ax = plt.subplot()
sns.heatmap(cm_dt, cmap="Greens", annot=True, fmt='.1f', ax=ax)
ax.set_xticklabels(labels)
ax.set_yticklabels(labels)
ax.set_xlabel('Predicted labels')
ax.set_ylabel('True labels')
ax.set_title('Confusion Matrix Decision Tree')
plt.show()

# Compare accuracy among the models
svm_acc = accuracy_score(y_test, y_pred_svm)
dt_acc = accuracy_score(y_test, y_pred_dt)

print(f"Accuracy of SVM: {svm_acc}")
print(f"Accuracy of Decision Tree: {dt_acc}")
